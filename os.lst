


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             StackSwitch, CODE, READONLY
    2 00000000         ;r0-r3;r14
    3 00000000                 IMPORT           PrintHex
    4 00000000                 IMPORT           PrintDec
    5 00000000                 IMPORT           PrintChar
    6 00000000                 IMPORT           SystemInit
    7 00000000                 IMPORT           PrintString
    8 00000000                 EXPORT           Start
    9 00000000                 EXPORT           Reset_Handler
   10 00000000                 EXPORT           SVC_Handler
   11 00000000         
   12 00000000                 THUMB
   13 00000000                 PRESERVE8
   14 00000000         
   15 00000000                 ENTRY
   16 00000000         Reset_Handler
   17 00000000         
   18 00000000         
   19 00000000         Start
   20 00000000 F7FF FFFE       BL               SystemInit  ; Initialise the ha
                                                            rdware and C init.
   21 00000004 F000 F814       BL               Stackalign  ; Using STKALIGN ha
                                                            rdware feature of t
                                                            he M3 processor 
   22 00000008 00000000 
                       ProcCount
                               DCD              0
   23 0000000C F000 F801       BL               Demote
   24 00000010 DF00            SVC              0
   25 00000012         
   26 00000012         
   27 00000012         
   28 00000012         Demote
   29 00000012 F04F 0002       MOV              r0, #0x2    ; set stack to PSP 
                                                            
   30 00000016 F380 8814       MSR              CONTROL, r0
   31 0000001A F3BF 8F6F       ISB
   32 0000001E F8DF D0BC       LDR              SP, =0x20001000 ; PROBABLY NEED
                                                             TO SET A PSP HERE 
                                                            SOMETIME
   33 00000022 F04F 0003       MOV              r0, #0x03   ; set privilege lev
                                                            el to User. ; N.B. 
                                                            Cannot combine this
                                                             to single MSR inst
                                                            ruction with ; abov
                                                            e PSP change when u
                                                            sing RVDS ISSM!!
   34 00000026 F380 8814       MSR              CONTROL, r0
   35 0000002A F3BF 8F6F       ISB
   36 0000002E 4770            BX               lr          ; and return safely
                                                             
   37 00000030         
   38 00000030         Stackalign
   39 00000030 482B            LDR              r0, =0xE000ED14 ; NVIC CCR 
   40 00000032 6801            LDR              r1, [r0]
   41 00000034 F441 7100       ORR.W            r1, r1, #0x200 
                                                            ; set STKALIGN bit
   42 00000038 6001            STR              r1, [r0]    ; store back to CCR
                                                            



ARM Macro Assembler    Page 2 


   43 0000003A 4770            BX               lr
   44 0000003C         
   45 0000003C         
   46 0000003C         SVC_Handler
   47 0000003C         ;Get SVC number to determina operation (e.g. SVC 3)
   48 0000003C B50F            PUSH             {r0-r3,r14}
   49 0000003E F01E 0F04       TST              lr, #4
   50 00000042 BF0C            ITE              eq          ; check which mode 
                                                            we came from 
   51 00000044 F3EF 8408       MRSEQ            r4, MSP     ; load the relevant
                                                             stack pointer 
   52 00000048 F3EF 8409       MRSNE            r4, PSP
   53 0000004C 69A1            LDR              r1, [r4, #24] ; stacked PC 
   54 0000004E F811 1C02       LDRB             r1, [r1, #-2] ; get SVC instruc
                                                            tion’s operand 
   55 00000052         
   56 00000052         ;Now we need to compare operand 
   57 00000052 2905            CMP              r1,#5
   58 00000054 D010            BEQ              Createproc
   59 00000056 2904            CMP              r1,#4
   60 00000058 F43F AFFE       BEQ              PrintString
   61 0000005C 2903            CMP              r1,#3
   62 0000005E F43F AFFE       BEQ              PrintChar
   63 00000062 2902            CMP              r1,#2
   64 00000064 F43F AFFE       BEQ              PrintDec
   65 00000068 2901            CMP              r1,#1
   66 0000006A F43F AFFE       BEQ              PrintHex
   67 0000006E 2900            CMP              r1,#0
   68 00000070 D022            BEQ              KillProc
   69 00000072 E8BD 400F       POP              {r0-r3,r14}
   70 00000076 4770            BX               lr
   71 00000078         
   72 00000078         Createproc
   73 00000078 B401            PUSH             {r0}        ; Push Process Addr
                                                            ess
   74 0000007A F44F 7080       LDR              r0, = 0x00000100 ; PSP Offset t
                                                            o Multiply
   75 0000007E F85F 1078       LDR              r1,ProcCount ; Get Process Numb
                                                            er
   76 00000082         ;increment PC
   77 00000082 F101 0201       ADD              r2, r1,#1
   78 00000086         ;STR ProcCount,r2
   79 00000086         
   80 00000086 FB00 F201       MUL              r2,r0,r1    ; (Offset * Program
                                                             ID)
   81 0000008A 4916            LDR              r1, = 0x20001100 ; Base Address
                                                            
   82 0000008C         ;MUL 
   83 0000008C         ;ADD r3,r1,r2,lsl #2
   84 0000008C EB01 0002       ADD              r0,r1,r2    ; PSP Stack Pinter 
                                                            (Base + (Offset * P
                                                            rogram ID))
   85 00000090 F3BF 8F6F       ISB
   86 00000094         ;demote
   87 00000094 BC02            POP              {r1}
   88 00000096         ;execute
   89 00000096 DF00            SVC              0
   90 00000098         
   91 00000098         Proc1



ARM Macro Assembler    Page 3 


   92 00000098 BF00            NOP
   93 0000009A         Proc2
   94 0000009A BF00            NOP
   95 0000009C         Proc3
   96 0000009C BF00            NOP
   97 0000009E         
   98 0000009E         ProcMon
   99 0000009E F85F 0098       LDR              r0,ProcCount ; Get Process Numb
                                                            er
  100 000000A2 4911            LDR              r1,=ProcTable ; Get Address of 
                                                            Process table
  101 000000A4 F851 0020       LDR              r0, [r1, r0, LSL#2] ;Load Addre
                                                            ss of Process in Pr
                                                            ocesstable
  102 000000A8 DF05            SVC              5           ; Run CreateProcess
                                                             via Handler
  103 000000AA         
  104 000000AA         ProcTable
  105 000000AA 00 00 00000000  DCD              Proc1
  106 000000B0 00000000        DCD              Proc2
  107 000000B4 00000000        DCD              Proc3
  108 000000B8         EndTable
  109 000000B8         
  110 000000B8         
  111 000000B8         KillProc
  112 000000B8 480C            LDR              r0, = ProcMon ;0x08000441
  113 000000BA F3EF 8109       MRS              r1, PSP
  114 000000BE F101 0118       ADD              r1,r1,#24
  115 000000C2 6008            STR              r0, [r1]
  116 000000C4 F8DF E028       LDR              lr, =0xFFFFFFFD
  117 000000C8 4770            BX               lr          ;
  118 000000CA         
  119 000000CA         
  120 000000CA         MULT
  121 000000CA 2901            CMP              r1, #1
  122 000000CC D005            BEQ              Finish
  123 000000CE BF22            ITTT             HS
  124 000000D0 3901            SUBHS            r1, #1
  125 000000D2 FB00 F002       MULHS            r0, r2
  126 000000D6 F7FF FFF8       BLHS             MULT
  127 000000DA         
  128 000000DA         
  129 000000DA         Finish
  130 000000DA E7FE            B                Finish
  131 000000DC                 END                          ; Mark end of file 
                                                            
              20001000 
              E000ED14 
              20001100 
              00000000 
              00000000 
              FFFFFFFD 
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\os.
d -o.\os.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc
\ST\STM32F4xx --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --lis
t=.\os.lst os.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Createproc 00000078

Symbol: Createproc
   Definitions
      At line 72 in file os.s
   Uses
      At line 58 in file os.s
Comment: Createproc used once
Demote 00000012

Symbol: Demote
   Definitions
      At line 28 in file os.s
   Uses
      At line 23 in file os.s
Comment: Demote used once
EndTable 000000B8

Symbol: EndTable
   Definitions
      At line 108 in file os.s
   Uses
      None
Comment: EndTable unused
Finish 000000DA

Symbol: Finish
   Definitions
      At line 129 in file os.s
   Uses
      At line 122 in file os.s
      At line 130 in file os.s

KillProc 000000B8

Symbol: KillProc
   Definitions
      At line 111 in file os.s
   Uses
      At line 68 in file os.s
Comment: KillProc used once
MULT 000000CA

Symbol: MULT
   Definitions
      At line 120 in file os.s
   Uses
      At line 126 in file os.s
Comment: MULT used once
Proc1 00000098

Symbol: Proc1
   Definitions
      At line 91 in file os.s
   Uses
      At line 105 in file os.s
Comment: Proc1 used once
Proc2 0000009A




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: Proc2
   Definitions
      At line 93 in file os.s
   Uses
      At line 106 in file os.s
Comment: Proc2 used once
Proc3 0000009C

Symbol: Proc3
   Definitions
      At line 95 in file os.s
   Uses
      At line 107 in file os.s
Comment: Proc3 used once
ProcCount 00000008

Symbol: ProcCount
   Definitions
      At line 22 in file os.s
   Uses
      At line 75 in file os.s
      At line 99 in file os.s

ProcMon 0000009E

Symbol: ProcMon
   Definitions
      At line 98 in file os.s
   Uses
      At line 112 in file os.s
Comment: ProcMon used once
ProcTable 000000AA

Symbol: ProcTable
   Definitions
      At line 104 in file os.s
   Uses
      At line 100 in file os.s
Comment: ProcTable used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 16 in file os.s
   Uses
      At line 9 in file os.s
Comment: Reset_Handler used once
SVC_Handler 0000003C

Symbol: SVC_Handler
   Definitions
      At line 46 in file os.s
   Uses
      At line 10 in file os.s
Comment: SVC_Handler used once
StackSwitch 00000000

Symbol: StackSwitch
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 1 in file os.s
   Uses
      None
Comment: StackSwitch unused
Stackalign 00000030

Symbol: Stackalign
   Definitions
      At line 38 in file os.s
   Uses
      At line 21 in file os.s
Comment: Stackalign used once
Start 00000000

Symbol: Start
   Definitions
      At line 19 in file os.s
   Uses
      At line 8 in file os.s
Comment: Start used once
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

PrintChar 00000000

Symbol: PrintChar
   Definitions
      At line 5 in file os.s
   Uses
      At line 62 in file os.s
Comment: PrintChar used once
PrintDec 00000000

Symbol: PrintDec
   Definitions
      At line 4 in file os.s
   Uses
      At line 64 in file os.s
Comment: PrintDec used once
PrintHex 00000000

Symbol: PrintHex
   Definitions
      At line 3 in file os.s
   Uses
      At line 66 in file os.s
Comment: PrintHex used once
PrintString 00000000

Symbol: PrintString
   Definitions
      At line 7 in file os.s
   Uses
      At line 60 in file os.s
Comment: PrintString used once
SystemInit 00000000

Symbol: SystemInit
   Definitions
      At line 6 in file os.s
   Uses
      At line 20 in file os.s
Comment: SystemInit used once
5 symbols
357 symbols in table
